<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorials on gomcptest</title>
    <link>http://localhost:1313/docs/tutorials/</link>
    <description>Recent content in Tutorials on gomcptest</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="http://localhost:1313/docs/tutorials/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting Started with gomcptest</title>
      <link>http://localhost:1313/docs/tutorials/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/tutorials/getting-started/</guid>
      <description>&lt;p&gt;This tutorial will guide you through setting up the gomcptest system and configuring Google Cloud authentication for the project.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-gomcptest&#34;&gt;What is gomcptest?&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#what-is-gomcptest&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;gomcptest is a proof of concept (POC) implementation of the Model Context Protocol (MCP) with a custom-built host. It enables AI models like Google&amp;rsquo;s Gemini to interact with their environment through a set of tools, creating powerful agentic systems.&lt;/p&gt;&#xA;&lt;h3 id=&#34;key-components&#34;&gt;Key Components&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#key-components&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;The project consists of three main parts:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building Your First OpenAI-Compatible Server</title>
      <link>http://localhost:1313/docs/tutorials/openaiserver-tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/tutorials/openaiserver-tutorial/</guid>
      <description>&lt;p&gt;This tutorial will guide you step-by-step through running and configuring the OpenAI-compatible server in gomcptest. By the end, you&amp;rsquo;ll have a working server that can communicate with LLM models and execute MCP tools.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#prerequisites&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Go &amp;gt;= 1.21 installed&lt;/li&gt;&#xA;&lt;li&gt;Access to Google Cloud Platform with Vertex AI API enabled&lt;/li&gt;&#xA;&lt;li&gt;GCP authentication set up via &lt;code&gt;gcloud auth login&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Basic familiarity with terminal commands&lt;/li&gt;&#xA;&lt;li&gt;The gomcptest repository cloned and tools built (see the &lt;a href=&#34;../getting-started/&#34;&gt;Getting Started&lt;/a&gt; guide)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-1-set-up-environment-variables&#34;&gt;Step 1: Set Up Environment Variables&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#step-1-set-up-environment-variables&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The OpenAI server requires several environment variables. Create a .envrc file in the host/openaiserver directory:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using the cliGCP Command Line Interface</title>
      <link>http://localhost:1313/docs/tutorials/cligcp-tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/tutorials/cligcp-tutorial/</guid>
      <description>&lt;p&gt;This tutorial guides you through setting up and using the cliGCP command line interface to interact with LLMs and MCP tools. By the end, you&amp;rsquo;ll be able to run the CLI and perform basic tasks with it.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#prerequisites&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Go &amp;gt;= 1.21 installed on your system&lt;/li&gt;&#xA;&lt;li&gt;Access to Google Cloud Platform with Vertex AI API enabled&lt;/li&gt;&#xA;&lt;li&gt;GCP authentication set up via &lt;code&gt;gcloud auth login&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;The gomcptest repository cloned and tools built (see the &lt;a href=&#34;../getting-started/&#34;&gt;Getting Started&lt;/a&gt; guide)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-1-understand-the-cligcp-tool&#34;&gt;Step 1: Understand the cliGCP Tool&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#step-1-understand-the-cligcp-tool&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The cliGCP tool is a command-line interface similar to tools like Claude Code. It connects directly to the Google Cloud Platform&amp;rsquo;s Vertex AI API to access Gemini models and can use local MCP tools to perform actions on your system.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
