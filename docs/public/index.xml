<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gomcptest</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on gomcptest</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>gomcptest Architecture</title>
      <link>http://localhost:1313/docs/explanation/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/explanation/architecture/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This document explains the architecture of gomcptest, the design decisions behind it, and how the various components interact to create a custom Model Context Protocol (MCP) host.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;the-big-picture&#34;&gt;The Big Picture&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#the-big-picture&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The gomcptest project implements a custom host that provides a Model Context Protocol (MCP) implementation. It&amp;rsquo;s designed to enable testing and experimentation with agentic systems without requiring direct integration with commercial LLM platforms.&lt;/p&gt;&#xA;&lt;p&gt;The system is built with these key principles in mind:&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Create a Custom MCP Tool</title>
      <link>http://localhost:1313/docs/how-to/create-custom-tool/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/how-to/create-custom-tool/</guid>
      <description>&lt;p&gt;This guide shows you how to create a new custom tool that&amp;rsquo;s compatible with the Model Context Protocol (MCP) in gomcptest.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#prerequisites&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A working installation of gomcptest&lt;/li&gt;&#xA;&lt;li&gt;Go programming knowledge&lt;/li&gt;&#xA;&lt;li&gt;Understanding of the MCP protocol basics&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;steps-to-create-a-custom-tool&#34;&gt;Steps to create a custom tool&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#steps-to-create-a-custom-tool&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-create-the-tool-directory-structure&#34;&gt;1. Create the tool directory structure&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#1-create-the-tool-directory-structure&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p tools/YourToolName/cmd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-create-the-readmemd-file&#34;&gt;2. Create the README.md file&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#2-create-the-readmemd-file&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Create a &lt;code&gt;README.md&lt;/code&gt; in the tool directory with documentation:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Started with gomcptest</title>
      <link>http://localhost:1313/docs/tutorials/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/tutorials/getting-started/</guid>
      <description>&lt;p&gt;This tutorial will guide you through setting up the gomcptest system and configuring Google Cloud authentication for the project.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-gomcptest&#34;&gt;What is gomcptest?&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#what-is-gomcptest&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;gomcptest is a proof of concept (POC) implementation of the Model Context Protocol (MCP) with a custom-built host. It enables AI models like Google&amp;rsquo;s Gemini to interact with their environment through a set of tools, creating powerful agentic systems.&lt;/p&gt;&#xA;&lt;h3 id=&#34;key-components&#34;&gt;Key Components&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#key-components&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;The project consists of three main parts:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tools Reference</title>
      <link>http://localhost:1313/docs/reference/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/reference/tools/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This reference guide documents all available MCP-compatible tools in the gomcptest project, their parameters, and response formats.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;bash&#34;&gt;Bash&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#bash&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Executes bash commands in a persistent shell session.&lt;/p&gt;&#xA;&lt;h3 id=&#34;parameters&#34;&gt;Parameters&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#parameters&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Parameter&lt;/th&gt;&#xA;          &lt;th&gt;Type&lt;/th&gt;&#xA;          &lt;th&gt;Required&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;command&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;string&lt;/td&gt;&#xA;          &lt;td&gt;Yes&lt;/td&gt;&#xA;          &lt;td&gt;The command to execute&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;number&lt;/td&gt;&#xA;          &lt;td&gt;No&lt;/td&gt;&#xA;          &lt;td&gt;Timeout in milliseconds (max 600000)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;response&#34;&gt;Response&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#response&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;The tool returns the command output as a string.&lt;/p&gt;&#xA;&lt;h3 id=&#34;banned-commands&#34;&gt;Banned Commands&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#banned-commands&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;For security reasons, the following commands are banned:&#xA;&lt;code&gt;alias&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;curlie&lt;/code&gt;, &lt;code&gt;wget&lt;/code&gt;, &lt;code&gt;axel&lt;/code&gt;, &lt;code&gt;aria2c&lt;/code&gt;, &lt;code&gt;nc&lt;/code&gt;, &lt;code&gt;telnet&lt;/code&gt;, &lt;code&gt;lynx&lt;/code&gt;, &lt;code&gt;w3m&lt;/code&gt;, &lt;code&gt;links&lt;/code&gt;, &lt;code&gt;httpie&lt;/code&gt;, &lt;code&gt;xh&lt;/code&gt;, &lt;code&gt;http-prompt&lt;/code&gt;, &lt;code&gt;chrome&lt;/code&gt;, &lt;code&gt;firefox&lt;/code&gt;, &lt;code&gt;safari&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Configure the OpenAI-Compatible Server</title>
      <link>http://localhost:1313/docs/how-to/configure-openaiserver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/how-to/configure-openaiserver/</guid>
      <description>&lt;p&gt;This guide shows you how to configure and customize the OpenAI-compatible server in gomcptest for different use cases.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#prerequisites&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A working installation of gomcptest&lt;/li&gt;&#xA;&lt;li&gt;Basic familiarity with the OpenAI server from the tutorial&lt;/li&gt;&#xA;&lt;li&gt;Understanding of environment variables and configuration&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;environment-variables-configuration&#34;&gt;Environment Variables Configuration&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#environment-variables-configuration&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;basic-server-configuration&#34;&gt;Basic Server Configuration&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#basic-server-configuration&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;The OpenAI server can be configured using the following environment variables:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Server port (default: 8080)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;PORT&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8080&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Log level: DEBUG, INFO, WARN, ERROR (default: INFO)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;LOG_LEVEL&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;INFO&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Directory to store images (required)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;IMAGE_DIR&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;/path/to/image/directory&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;gcp-configuration&#34;&gt;GCP Configuration&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#gcp-configuration&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Configure the Google Cloud Platform integration:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding the Model Context Protocol (MCP)</title>
      <link>http://localhost:1313/docs/explanation/mcp-protocol/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/explanation/mcp-protocol/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This document explores the Model Context Protocol (MCP), how it works, the design decisions behind it, and how it compares to alternative approaches for LLM tool integration.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;what-is-the-model-context-protocol&#34;&gt;What is the Model Context Protocol?&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#what-is-the-model-context-protocol&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The Model Context Protocol (MCP) is a standardized communication protocol that enables Large Language Models (LLMs) to interact with external tools and capabilities. It defines a structured way for models to request information or take actions in the real world, and for tools to provide responses back to the model.&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenAI-Compatible Server Reference</title>
      <link>http://localhost:1313/docs/reference/openaiserver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/reference/openaiserver/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This reference guide provides detailed technical documentation on the OpenAI-compatible server&amp;rsquo;s architecture, API endpoints, configuration options, and integration details with Vertex AI.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#overview&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The OpenAI-compatible server is a core component of the gomcptest system. It implements an API surface compatible with the OpenAI Chat Completions API while connecting to Google&amp;rsquo;s Vertex AI for model inference. The server acts as a bridge between clients (like the cliGCP tool) and the underlying LLM models, handling session management, function calling, and tool execution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building Your First OpenAI-Compatible Server</title>
      <link>http://localhost:1313/docs/tutorials/openaiserver-tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/tutorials/openaiserver-tutorial/</guid>
      <description>&lt;p&gt;This tutorial will guide you step-by-step through running and configuring the OpenAI-compatible server in gomcptest. By the end, you&amp;rsquo;ll have a working server that can communicate with LLM models and execute MCP tools.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#prerequisites&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Go &amp;gt;= 1.21 installed&lt;/li&gt;&#xA;&lt;li&gt;Access to Google Cloud Platform with Vertex AI API enabled&lt;/li&gt;&#xA;&lt;li&gt;GCP authentication set up via &lt;code&gt;gcloud auth login&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Basic familiarity with terminal commands&lt;/li&gt;&#xA;&lt;li&gt;The gomcptest repository cloned and tools built (see the &lt;a href=&#34;../getting-started/&#34;&gt;Getting Started&lt;/a&gt; guide)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-1-set-up-environment-variables&#34;&gt;Step 1: Set Up Environment Variables&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#step-1-set-up-environment-variables&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The OpenAI server requires several environment variables. Create a .envrc file in the host/openaiserver directory:&lt;/p&gt;</description>
    </item>
    <item>
      <title>cliGCP Reference</title>
      <link>http://localhost:1313/docs/reference/cligcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/reference/cligcp/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This reference guide provides detailed documentation of the cliGCP command structure, components, parameters, interaction patterns, and internal states.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#overview&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The cliGCP (Command Line Interface for Google Cloud Platform) is a command-line tool that provides a chat interface similar to tools like &amp;ldquo;Claude Code&amp;rdquo; or &amp;ldquo;ChatGPT&amp;rdquo;. It connects to an OpenAI-compatible server and allows users to interact with LLMs and MCP tools through a conversational interface.&lt;/p&gt;&#xA;&lt;h2 id=&#34;command-structure&#34;&gt;Command Structure&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#command-structure&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;basic-usage&#34;&gt;Basic Usage&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#basic-usage&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./bin/cliGCP &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;flags&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;flags&#34;&gt;Flags&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#flags&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Flag&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;          &lt;th&gt;Default&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;-mcpservers&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Comma-separated list of MCP tool paths&lt;/td&gt;&#xA;          &lt;td&gt;&amp;quot;&amp;quot;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;-server&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;URL of the OpenAI-compatible server&lt;/td&gt;&#xA;          &lt;td&gt;&amp;ldquo;http://localhost:8080&amp;rdquo;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;-model&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;LLM model to use&lt;/td&gt;&#xA;          &lt;td&gt;&amp;ldquo;gemini-pro&amp;rdquo;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;-prompt&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Initial system prompt&lt;/td&gt;&#xA;          &lt;td&gt;&amp;ldquo;You are a helpful assistant.&amp;rdquo;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;-temp&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Temperature setting for model responses&lt;/td&gt;&#xA;          &lt;td&gt;0.7&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;-maxtokens&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Maximum number of tokens in responses&lt;/td&gt;&#xA;          &lt;td&gt;1024&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;-history&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;File path to store/load chat history&lt;/td&gt;&#xA;          &lt;td&gt;&amp;quot;&amp;quot;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;-verbose&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Enable verbose logging&lt;/td&gt;&#xA;          &lt;td&gt;false&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;example&#34;&gt;Example&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#example&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./bin/cliGCP -mcpservers &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;./bin/Bash;./bin/View;./bin/GlobTool;./bin/GrepTool;./bin/LS;./bin/Edit;./bin/Replace;./bin/dispatch_agent&amp;#34;&lt;/span&gt; -server &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://localhost:8080&amp;#34;&lt;/span&gt; -model &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;gemini-pro&amp;#34;&lt;/span&gt; -prompt &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;You are a helpful command-line assistant.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;components&#34;&gt;Components&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#components&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;chat-interface&#34;&gt;Chat Interface&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#chat-interface&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;The chat interface provides:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using the cliGCP Command Line Interface</title>
      <link>http://localhost:1313/docs/tutorials/cligcp-tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/tutorials/cligcp-tutorial/</guid>
      <description>&lt;p&gt;This tutorial guides you through setting up and using the cliGCP command line interface to interact with LLMs and MCP tools. By the end, you&amp;rsquo;ll be able to run the CLI and perform basic tasks with it.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#prerequisites&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Go &amp;gt;= 1.21 installed on your system&lt;/li&gt;&#xA;&lt;li&gt;Access to Google Cloud Platform with Vertex AI API enabled&lt;/li&gt;&#xA;&lt;li&gt;GCP authentication set up via &lt;code&gt;gcloud auth login&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;The gomcptest repository cloned and tools built (see the &lt;a href=&#34;../getting-started/&#34;&gt;Getting Started&lt;/a&gt; guide)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-1-understand-the-cligcp-tool&#34;&gt;Step 1: Understand the cliGCP Tool&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#step-1-understand-the-cligcp-tool&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The cliGCP tool is a command-line interface similar to tools like Claude Code. It connects directly to the Google Cloud Platform&amp;rsquo;s Vertex AI API to access Gemini models and can use local MCP tools to perform actions on your system.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Configure the cliGCP Command Line Interface</title>
      <link>http://localhost:1313/docs/how-to/configure-cligcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/how-to/configure-cligcp/</guid>
      <description>&lt;p&gt;This guide shows you how to configure and customize the cliGCP command line interface for various use cases.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#prerequisites&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A working installation of gomcptest&lt;/li&gt;&#xA;&lt;li&gt;Basic familiarity with the cliGCP tool from the tutorial&lt;/li&gt;&#xA;&lt;li&gt;Understanding of environment variables and configuration&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;command-line-arguments&#34;&gt;Command Line Arguments&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#command-line-arguments&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The cliGCP tool accepts the following command line arguments:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Specify the MCP servers to use (required)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-mcpservers &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;tool1;tool2;tool3&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Example with tool arguments&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./cliGCP -mcpservers &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;./GlobTool;./GrepTool;./dispatch_agent -glob-path ./GlobTool -grep-path ./GrepTool -ls-path ./LS -view-path ./View;./Bash&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;environment-variables-configuration&#34;&gt;Environment Variables Configuration&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#environment-variables-configuration&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;gcp-configuration&#34;&gt;GCP Configuration&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#gcp-configuration&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Configure the Google Cloud Platform integration with these environment variables:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding the MCP Tools</title>
      <link>http://localhost:1313/docs/explanation/tools-details/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/explanation/tools-details/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This document explains the architecture and implementation of the MCP tools in gomcptest, how they work, and the design principles behind them.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;what-are-mcp-tools&#34;&gt;What are MCP Tools?&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#what-are-mcp-tools&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;MCP (Model Context Protocol) tools are standalone executables that provide specific functions that can be invoked by AI models. They allow the AI to interact with its environment - performing tasks like reading and writing files, executing commands, or searching for information.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Use the OpenAI Server with big-AGI</title>
      <link>http://localhost:1313/docs/how-to/configure-bigagi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/how-to/configure-bigagi/</guid>
      <description>&lt;p&gt;This guide shows you how to set up and configure the gomcptest OpenAI-compatible server to work with &lt;a href=&#34;https://github.com/enricoros/big-agi&#34;&gt;big-AGI&lt;/a&gt;, a popular open-source web client for AI assistants.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#prerequisites&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A working installation of gomcptest&lt;/li&gt;&#xA;&lt;li&gt;The OpenAI-compatible server running (see the &lt;a href=&#34;../../tutorials/openaiserver-tutorial/&#34;&gt;OpenAI Server tutorial&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; (version 18.17.0 or newer)&lt;/li&gt;&#xA;&lt;li&gt;Git&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;why-use-big-agi-with-gomcptest&#34;&gt;Why Use big-AGI with gomcptest?&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#why-use-big-agi-with-gomcptest&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;big-AGI provides a polished, feature-rich web interface for interacting with AI models. By connecting it to the gomcptest OpenAI-compatible server, you get:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Search Results</title>
      <link>http://localhost:1313/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/search/</guid>
      <description></description>
    </item>
  </channel>
</rss>
